{"version":3,"sources":["App.tsx","index.tsx","qr.jpg"],"names":["medias","video","width","height","audio","App","useState","detector","setDetector","message","setMessage","mediaRef","useRef","imgRef","canvasRef","useEffect","navigator","mediaDevices","getUserMedia","then","stream","current","srcObject","catch","e","console","error","window","BarcodeDetector","drawImage","resourceType","resource","context","getContext","detect","success","result","length","style","display","flexFlow","justifyContent","alignItems","id","ref","muted","autoPlay","onClick","paddingLeft","src","qrCode","alt","border","ReactDOM","render","document","getElementById","module","exports"],"mappings":"yLAGMA,EAAS,CACXC,MAAO,CACHC,MAAO,IACPC,OAAQ,KAEZC,OAAO,GAuGIC,MA9Ff,WAAgB,IAAD,EACqBC,mBAAc,MADnC,mBACJC,EADI,KACMC,EADN,OAEmBF,mBAAiB,IAFpC,mBAEJG,EAFI,KAEKC,EAFL,KAGLC,EAAWC,iBAAyB,MACpCC,EAASD,iBAAyB,MAClCE,EAAYF,iBAA0B,MAE5CG,qBAAU,WASN,OARAC,UAAUC,aACLC,aAAalB,GACbmB,MAAK,SAACC,GACET,EAASU,UACdV,EAASU,QAAQC,UAAYF,MAEhCG,OAAM,SAACC,GAAD,OAAOC,QAAQC,MAAM,YAChClB,EAAY,IAAImB,OAAOC,iBAChB,eAER,IAEH,IAKMC,EAAY,SAACC,GACf,IAAMC,EAA4B,UAAjBD,EAA2BnB,EAASU,QAAUR,EAAOQ,QAChEW,EAPS,WACf,GAAKlB,EAAUO,QACf,OAAOP,EAAUO,QAAQY,WAAW,MAKpBA,GACXD,GACAL,OAAOC,iBACZrB,EACK2B,OAAOH,GACPZ,MAAK,SAACgB,GACH,GAAKJ,EAAL,CACA,IAAMK,EAASD,EAAQE,OAAS,EAAI,uFAAmB,iFACvD3B,EAAW0B,GACXJ,EAAQH,UAAUE,EAAU,EAAG,EAAG,IAAK,SAE1CR,OAAM,SAACC,GAAD,OAAcC,QAAQC,MAAMF,OAG3C,OACI,yBAAKc,MAAO,CAAEC,QAAS,OAAQC,SAAU,SAAUtC,MAAO,SACtD,yBAAKoC,MAAO,CAAEC,QAAS,OAAQE,eAAgB,eAAgBC,WAAY,WACvE,yBACIJ,MAAO,CACHC,QAAS,OACTC,SAAU,WAGd,2BAAOG,GAAG,SAASC,IAAKjC,EAAUkC,OAAK,EAACC,UAAQ,IAChD,4BACIC,QAAS,WACLlB,EAAU,WAFlB,2DAQJ,yBAAKS,MAAO,CAAEC,QAAS,OAAQC,SAAU,SAAUQ,YAAa,QAC5D,yBACIC,IAAKC,IACLC,IAAI,wBACJP,IAAK/B,EACLX,MAAM,QACNC,OAAO,QACPmC,MAAO,CAAEc,OAAQ,eAErB,4BACIL,QAAS,WACLlB,EAAU,cAFlB,sDASR,yBACIS,MAAO,CACHC,QAAS,OACTC,SAAU,cACVC,eAAgB,gBAChBC,WAAY,WAGhB,yBAAKJ,MAAO,CAAEpC,MAAO,UACjB,4BAAQyC,GAAG,WAAWC,IAAK9B,EAAWZ,MAAO,IAAKC,OAAQ,MAD9D,kBAEoBM,MCnGpC4C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.78d86539.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport qrCode from './qr.jpg';\n\nconst medias = {\n    video: {\n        width: 320,\n        height: 320,\n    },\n    audio: false,\n};\n\ndeclare global {\n    interface Window {\n        BarcodeDetector: any;\n    }\n}\n\nfunction App() {\n    const [detector, setDetector] = useState<any>(null);\n    const [message, setMessage] = useState<string>('');\n    const mediaRef = useRef<HTMLVideoElement>(null);\n    const imgRef = useRef<HTMLImageElement>(null);\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n\n    useEffect(() => {\n        navigator.mediaDevices\n            .getUserMedia(medias)\n            .then((stream) => {\n                if (!mediaRef.current) return;\n                mediaRef.current.srcObject = stream;\n            })\n            .catch((e) => console.error('error'));\n        setDetector(new window.BarcodeDetector());\n        return () => {};\n        // eslint-disable-next-line\n    }, []);\n\n    const getContext = () => {\n        if (!canvasRef.current) return;\n        return canvasRef.current.getContext('2d');\n    };\n\n    const drawImage = (resourceType: 'video' | 'pircture') => {\n        const resource = resourceType === 'video' ? mediaRef.current : imgRef.current;\n        const context = getContext();\n        if (!context) return;\n        if (!window.BarcodeDetector) return;\n        detector\n            .detect(resource)\n            .then((success: any) => {\n                if (!resource) return;\n                const result = success.length > 0 ? 'バーコードが見つかりました。' : '何も見つかりませんでした。';\n                setMessage(result);\n                context.drawImage(resource, 0, 0, 320, 320);\n            })\n            .catch((e: Error) => console.error(e));\n    };\n\n    return (\n        <div style={{ display: 'flex', flexFlow: 'column', width: '100%' }}>\n            <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n                <div\n                    style={{\n                        display: 'flex',\n                        flexFlow: 'column',\n                    }}\n                >\n                    <video id=\"player\" ref={mediaRef} muted autoPlay></video>\n                    <button\n                        onClick={() => {\n                            drawImage('video');\n                        }}\n                    >\n                        カメラから読み込む\n                    </button>\n                </div>\n                <div style={{ display: 'flex', flexFlow: 'column', paddingLeft: '8px' }}>\n                    <img\n                        src={qrCode}\n                        alt=\"QR-コード\"\n                        ref={imgRef}\n                        width=\"320px\"\n                        height=\"320px\"\n                        style={{ border: 'solid 1px' }}\n                    />\n                    <button\n                        onClick={() => {\n                            drawImage('pircture');\n                        }}\n                    >\n                        画像から読み込む\n                    </button>\n                </div>\n            </div>\n            <div\n                style={{\n                    display: 'flex',\n                    flexFlow: 'column wrap',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                }}\n            >\n                <div style={{ width: '320px' }}>\n                    <canvas id=\"snapshot\" ref={canvasRef} width={320} height={320} />\n                    Barcode text : {message}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/qr.a014e753.jpg\";"],"sourceRoot":""}